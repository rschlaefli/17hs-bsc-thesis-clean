\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{c+c1}{\PYGZsh{} extract the 95th percentile from a synchronization matrix}
\PYG{l+m+mi}{95}\PYG{n}{th\PYGZus{}percentile} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{nanpercentile}\PYG{p}{(}\PYG{n}{adjacency\PYGZus{}matrix}\PYG{p}{,} \PYG{l+m+mi}{95}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} set all values above and below the quantile to predefined values}
\PYG{n}{ge} \PYG{o}{=} \PYG{n}{adjacency\PYGZus{}matrix} \PYG{o}{\PYGZgt{}} \PYG{n}{quantile}
\PYG{n}{lte} \PYG{o}{=} \PYG{n}{adjacency\PYGZus{}matrix} \PYG{o}{\PYGZlt{}=} \PYG{n}{quantile}

\PYG{n}{adjacency\PYGZus{}matrix}\PYG{p}{[}\PYG{n}{ge}\PYG{p}{]} \PYG{o}{=} \PYG{n}{set\PYGZus{}ge}
\PYG{n}{adjacency\PYGZus{}matrix}\PYG{p}{[}\PYG{n}{lte}\PYG{p}{]} \PYG{o}{=} \PYG{n}{set\PYGZus{}lte}

\PYG{c+c1}{\PYGZsh{} build a network from an adjacency matrix}
\PYG{c+c1}{\PYGZsh{} using the networkx (nx) Python library}
\PYG{n}{network} \PYG{o}{=} \PYG{n}{nx}\PYG{o}{.}\PYG{n}{from\PYGZus{}numpy\PYGZus{}matrix}\PYG{p}{(}\PYG{n}{adjacency\PYGZus{}matrix}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} calculate the degree, betweenness and PageRank for all nodes}
\PYG{c+c1}{\PYGZsh{} this shows the weighted variant (simply leave the parameter for the unweighted variant)}
\PYG{n}{nodes\PYGZus{}degree} \PYG{o}{=} \PYG{n}{network}\PYG{o}{.}\PYG{n}{degree}\PYG{p}{(}\PYG{n}{weight}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}weight\PYGZsq{}}\PYG{p}{)}
\PYG{n}{nodes\PYGZus{}betweenness} \PYG{o}{=} \PYG{n}{nx}\PYG{o}{.}\PYG{n}{betweenness\PYGZus{}centrality}\PYG{p}{(}\PYG{n}{network}\PYG{p}{,} \PYG{n}{normalized}\PYG{o}{=}\PYG{n+nb+bp}{False}\PYG{p}{)}
\PYG{n}{nodes\PYGZus{}pagerank} \PYG{o}{=} \PYG{n}{nx}\PYG{o}{.}\PYG{n}{pagerank\PYGZus{}numpy}\PYG{p}{(}\PYG{n}{network}\PYG{p}{,} \PYG{n}{weight}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}weight\PYGZsq{}}\PYG{p}{)}
\end{Verbatim}
